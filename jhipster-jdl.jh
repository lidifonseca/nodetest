entity Pesquisa {
	nome String,
    classesIncluir TextBlob
    incluirMovimentacoes TextBlob,
    descartarMovimentacoes TextBlob,
    incluirMovimentacoesAll Boolean,
    anoInicial Integer,
    anoFinal Integer,
    csv TextBlob,
    dataCriacao Instant required
    dataFinalizacao Instant 
    situacao Situacao required
    observacoes String
    csvTotal Integer
    csvVerificados Integer
    comarcaPorComarca Boolean
}

enum Situacao {
	AGUARDANDO, COLETANDO, SUCESSO, ERRO, CANCELADA
}

entity Estado {
  	nome String required
    sigla String required
}

entity Comarca {
	tjid Integer required
	nome String required
}

entity Processo {
	numero String required
    cnpj String required
    razaoSocial String
    classe String required
    assunto String
    vara String
    juiz String 
    dataDistribuicao LocalDate
    distribuicao String
    localFisico String
    controle String
    area String
    estado String required
    observacao TextBlob
    interesse Boolean
    dataCriacao Instant required
    dataAtualicacao Instant
    dataExclusao Instant
    link TextBlob required
    valor Double
    moeda String
}

entity Parte {
	categoria String
    participante String 
    advogados TextBlob
}

entity Movimentacao {
	data LocalDate
    movimento TextBlob    
}

entity Peticao {
	data LocalDate
    tipo TextBlob    
}

entity Incidente {
    recebedoEm LocalDate
    clase String
}

    /** 
    @formTab primeiro<motivo>@@ 
    @formTab segundo<processo,apensamento>@@ 
    @viewLayout processo<top;6>, apensamento<top;6>@@ 
    */
entity Apenso {

    /** @formTab primeiro@@ */
    numero String required

    /** @formTab segundo@@ 
     Otro info */
    clase String
    apensamento LocalDate
    motivo String

}

entity Audiencia {
    data LocalDate
    audencia String
    situacao String
    quatidadePessoas Integer
}

entity HistoricoClase {
    data LocalDate
    tipo String 
    classe String
    area String
    motivo String
}

relationship ManyToOne {
	Pesquisa{user} to User
}

relationship ManyToMany {
	Pesquisa{processo} to Processo{pesquisa}
}

// defining multiple OneToMany relationships with comments
relationship OneToMany {
	Processo{movimentacoes} to Movimentacao{processo},
    Processo{partes} to Parte{processo},
    Processo{peticoes} to Peticao{processo},
    Processo{incidentes} to Incidente{processo},
    /** @formTab segundo@@ 
     Otro info */
    Processo{apensos} to Apenso{processo},
    Processo{audioencias} to Audiencia{processo},
    Processo{historicos} to HistoricoClase{processo}, 
    Comarca{processos} to Processo{comarca}
    Comarca{pesquisas} to Pesquisa{comarcas}
    Estado{pesquisas} to Pesquisa{estado}
    Estado{comarcas} to Comarca{estado}
}

// Set pagination options
paginate all with pagination

// Use Data Transfert Objects (DTO)
dto * with mapstruct
filter *
service * with serviceClass

